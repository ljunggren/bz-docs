"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7742],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),p=c(n),m=i,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(f,s(s({ref:t},d),{},{components:n})):a.createElement(f,s({ref:t},d))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=m;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[p]="string"==typeof e?e:i,s[1]=r;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9368:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const o={id:"validations",title:"Validations (assertions)"},s=void 0,r={unversionedId:"actions/validations",id:"actions/validations",title:"Validations (assertions)",description:"Creating a simple validation",source:"@site/docs/actions/validations.mdx",sourceDirName:"actions",slug:"/actions/validations",permalink:"/docs/actions/validations",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/actions/validations.mdx",tags:[],version:"current",frontMatter:{id:"validations",title:"Validations (assertions)"},sidebar:"docs",previous:{title:"Events",permalink:"/docs/actions/events"},next:{title:"Extract data",permalink:"/docs/actions/extract"}},l={},c=[{value:"Creating a simple validation",id:"creating-a-simple-validation",level:6},{value:"Content formats",id:"content-formats",level:6},{value:"Compare",id:"compare",level:6},{value:"Javascript validations",id:"javascript-validations",level:6}],d={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h6",{id:"creating-a-simple-validation"},"Creating a simple validation"),(0,i.kt)("p",null,'In a test, it\xb4s common to make sure that a certain outcome is achieved. In Boozang, we do this using validation, also known as assertions. To create a validation, click on the validation icon and select the element to validate it in the application window. The default validation content format: "validate exists" will be created. If you want to change the validation content format you can do this using the dropdown in the tool window. '),(0,i.kt)("h6",{id:"content-formats"},"Content formats"),(0,i.kt)("p",null,"The following content formats are supported"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Exists (default): Validates if an element exists. It generates a success condition if the element in the path exists, and a fail condition if it doesn't exist. "),(0,i.kt)("li",{parentName:"ul"},"Not exists: Opposite to Exists. It generates a fail condition if the element in the path exist, and a success condition if it doesn't exist. "),(0,i.kt)("li",{parentName:"ul"},"Dynamic Exist: Uses the value of the expectation to determine what it runs. If expectation evaluates to ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),"  Exists will execute, if ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),", Not Exists will execute. "),(0,i.kt)("li",{parentName:"ul"},"innerText: Used for String comparisons of the innerText content of the element. It generates a success condition if match, a fail condition on mismatch and an error condition if element doesn't exist. "),(0,i.kt)("li",{parentName:"ul"},"Input value: Used to do String comparisons of an input box. It generates a success condition if match, a fail condition on mismatch and an error condition if element doesn't exist. "),(0,i.kt)("li",{parentName:"ul"},"Is Enabled: Check if an element is enabled. It generates a success condition if the element is enabled,  a fail condition if the element is disabled, and error if the element doesn't exist. "),(0,i.kt)("li",{parentName:"ul"},"Is Disabled: Opposite of Is Enabled. It generates a fail condition if the element is enabled,  a success condition if the element is disabled, and error if the element doesn't exist. "),(0,i.kt)("li",{parentName:"ul"},"Is Checked: Checks if a checkbox is checked. It generates success if the element is checked, fail if the element is unchecked, and error if the element doesn't exist. "),(0,i.kt)("li",{parentName:"ul"},"Screenshot: Does a pixel-by-pixel comparison of an image. After an element has been selected, a checksum is generated of the image content. This action will generate success if an identical image is found at the element location and fail otherwise. An error will be generated if the element doesn\xb4t exist. "),(0,i.kt)("li",{parentName:"ul"},"Data: Check an element if it contains a set of data. The data expectation can contain several data entries. It generates success if all data is found in any order, fail if any data is missing and error if element doesn't exist. Powerful to check if a table or list have a certain data entry. "),(0,i.kt)("li",{parentName:"ul"},"Script: Write custom validation using Javascript. Generates success if true is returned and fail if false is returned."),(0,i.kt)("li",{parentName:"ul"},"Request/Response (API): Does a validation on an API end-point. See section for API testing. ")),(0,i.kt)("p",null,"As you can see, a lot of these commands have three expected results: Success, Fail, and Error. Note how Exists and Not Exists should only be able to return Success or Fail."),(0,i.kt)("h6",{id:"compare"},"Compare"),(0,i.kt)("p",null,"This is the comparison operator. The following operators are self-explanatory"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Equals (==) and Not Equals (!=)."),(0,i.kt)("li",{parentName:"ul"},"Greater-than (",(0,i.kt)("inlineCode",{parentName:"li"},">"),"), Greater-than-or-equals ",(0,i.kt)("inlineCode",{parentName:"li"},">="),")."),(0,i.kt)("li",{parentName:"ul"},"Lesser-than (",(0,i.kt)("inlineCode",{parentName:"li"},"<"),"), Lesser-than-or-equals (",(0,i.kt)("inlineCode",{parentName:"li"},"<="),").")),(0,i.kt)("p",null,"and these are a bit more complex"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"regex: Use regular expressions in the Expectation field"),(0,i.kt)("li",{parentName:"ul"},"Include: Checks for any occurrences of a String. It generates success if it finds a match and it will fail otherwise. If the element doesn't exist, it generates an error.   "),(0,i.kt)("li",{parentName:"ul"},"Exclude: Opposite of Include. It fails if it finds a match, success otherwise. If the element doesn't exist, it generates an error.   ")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Expectation")),(0,i.kt)("p",null,"This is the comparison value to use. This could be a string or regular expression (in the case of the regex operator). "),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Advanced (accessible from kebab menu)")),(0,i.kt)("p",null,"This is used to pre-process a validation and is useful when filtering out dynamic data. "),(0,i.kt)("p",null,"Imagine the following example: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<div>\n  The date is 2019-09-12 and I'm feeling good.\n</div>\n")),(0,i.kt)("p",null,"In this case, it would be desirable to validate the message itself and that any date is shown, but not a specific date. By setting ",(0,i.kt)("inlineCode",{parentName:"p"},"Match")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Replacement String")," like"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Match: ([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))\nReplacement string: YYYY-MM-DD\n")),(0,i.kt)("p",null,"The expectation value for ",(0,i.kt)("inlineCode",{parentName:"p"},"Validation Equals"),"becomes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<div>\n  The date is YYYY-MM-DD and I'm feeling good.\n</div> \n")),(0,i.kt)("p",null,"This can also be used to make sure sensitive information doesn't end up in any reports or on the Cloud server."),(0,i.kt)("h6",{id:"javascript-validations"},"Javascript validations"),(0,i.kt)("p",null,'The default validation is HTML validation. By changing the method to "Script", you can directly do validations using Javascript. The Javascript function is written in the standard Boozang format'),(0,i.kt)("p",null,"  ",(0,i.kt)("inlineCode",{parentName:"p"},"(function(){\n    //return true/false;\n    })()")),(0,i.kt)("p",null,"and must return true or false. If an element has been picked with the DOM picker this will be available using the handle ",(0,i.kt)("inlineCode",{parentName:"p"},"$element"),". Standard data handles, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"$project"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"$module"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"$test")," will also be available, as well as the test window handles ",(0,i.kt)("inlineCode",{parentName:"p"},"$TW"),". For more information about data see ",(0,i.kt)("a",{href:"/doc/data.html"},"data")," section."))}p.isMDXComponent=!0}}]);