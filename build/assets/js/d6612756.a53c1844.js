"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2252],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(f,a(a({ref:n},l),{},{components:t})):r.createElement(f,a({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1536:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=t(7462),o=(t(7294),t(3905));const i={id:"jenkins",title:"Jenkins"},a=void 0,s={unversionedId:"continuous-integration/jenkins",id:"continuous-integration/jenkins",title:"Jenkins",description:"Jenkins Ci integration is fairly straightforward, and we recommend using the Docker Xvfb runner. That way we avoid setting up Xvfb for headless runs, which can be quite complex.",source:"@site/docs/continuous-integration/jenkins.mdx",sourceDirName:"continuous-integration",slug:"/continuous-integration/jenkins",permalink:"/docs/continuous-integration/jenkins",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/continuous-integration/jenkins.mdx",tags:[],version:"current",frontMatter:{id:"jenkins",title:"Jenkins"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/continuous-integration/introduction"},next:{title:"GitHub actions",permalink:"/docs/continuous-integration/github-actions"}},c={},u=[],l={toc:u};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Jenkins Ci integration is fairly straightforward, and we recommend using the Docker Xvfb runner. That way we avoid setting up Xvfb for headless runs, which can be quite complex. "),(0,o.kt)("p",null,"Start by copying the boilerplate script and create a free-style job according to the instructions given"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},'Click "New Item" in the Jenkins main view'),(0,o.kt)("li",{parentName:"ol"},'Choose "Freestyle project"'),(0,o.kt)("li",{parentName:"ol"},"Add build step -> Execute Shell"),(0,o.kt)("li",{parentName:"ol"},"Copy the below code into the shell"),(0,o.kt)("li",{parentName:"ol"},"Add a Post-build action -> Add Cucumber reports"),(0,o.kt)("li",{parentName:"ol"},"The job is ready to run!")),(0,o.kt)("p",null,"Below is a sample of code generated. Note that most of these settings will vary depending on your particular project settings and selected test to run.  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'BASE=http://staging-be.boozang.com\nTOKEN=my-secret-token\nENV=4\nPROJECT=5e3f275e64f84941a326d4d8\nBRANCH=jira61\nSELF=0\nTEST=m72/t10\nGROUP=\nSCOPE=\nPARAMETER=\nWORKERS=1\n\necho Running $workers processes for test: $test\n\necho Setting up slaves\ncounter=1\nwhile [ $counter -lt ${WORKERS} ]\ndo\n  ((counter++))\n  WORKER_URL="${BASE}/extension?parameter=${PARAMETER}&token=${TOKEN}${PROJECT}group=${GROUP}&scope=${SCOPE}&env=${ENV}&key=${counter}&self=${SELF}#${PROJECT}/${BRANCH}"\n  nohup docker run --rm -v "$(pwd):/var/boozang/" --name=bzworker${counter} styrman/boozang-runner "${WORKER_URL}" > out_${counter}.log &\ndone\n\necho All slaves done. Starting master job. \n\nMASTER_URL="${BASE}/extension?parameter=${PARAMETER}&token=${TOKEN}${PROJECT}&group=${GROUP}&scope=${SCOPE}&env=${ENV}&key=1&self=${SELF}#${PROJECT}/${BRANCH}/${TEST}/run"\ndocker run --rm -v "$(pwd):/var/boozang/" --name=bzworker1 styrman/boozang-runner "${MASTER_URL}"\n')),(0,o.kt)("p",null,'It\'s often a good idea to add parameters to the job, for instance "module_id/test_id" and "number_of_workers".'),(0,o.kt)("p",null,"In order to see an example setup using an upstream pipeline, check out this post on our user forum: ",(0,o.kt)("a",{parentName:"p",href:"https://boozang.com/forum/topic/jenkins-config-for-distributed-runs/"},"https://boozang.com/forum/topic/jenkins-config-for-distributed-runs/")))}p.isMDXComponent=!0}}]);