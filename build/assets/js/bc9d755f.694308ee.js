"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8079],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>v});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,v=p["".concat(l,".").concat(m)]||p[m]||u[m]||s;return n?r.createElement(v,o(o({ref:t},c),{},{components:n})):r.createElement(v,o({ref:t},c))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,o[1]=i;for(var d=2;d<s;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4559:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const s={},o=void 0,i={unversionedId:"core-concepts/element-selectors/smart-selectors",id:"core-concepts/element-selectors/smart-selectors",title:"smart-selectors",description:"Element path operation",source:"@site/docs/core-concepts/element-selectors/smart-selectors.mdx",sourceDirName:"core-concepts/element-selectors",slug:"/core-concepts/element-selectors/smart-selectors",permalink:"/docs/core-concepts/element-selectors/smart-selectors",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/core-concepts/element-selectors/smart-selectors.mdx",tags:[],version:"current",frontMatter:{}},l={},d=[{value:"Element path operation",id:"element-path-operation",level:6}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h6",{id:"element-path-operation"},"Element path operation"),(0,a.kt)("p",null,"The element path has the following operations. Boozang uses an expanded version of the jQuery selection standard to create a more human-readable code to identify elements. The basic pattern is that the lowercase jQuery standard operations, while uppercase operations are case-insensitive. All recordings will generate Uppercase operations by default. The operations that will be recorded for a test-case is marked by an asterisk (",(0,a.kt)("inlineCode",{parentName:"p"},"*"),") "),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"endContains (*)"),":  True if the selected element (case-insensitive) have the exact string alongside other strings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Ex:div:endContains(lws)\nYes:<div>lws ok</div>\nNo:<div>lwsok</div>\nYes:<div>lws <span>ok</span></div>\nNo: <div><span>lws</span></div>\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"endEquals (*)"),": True if the selected element (case-insensitive) have the exact string"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Ex:div:endEquals(lws)\nYes:<div>lws</div>\nNo: <div>lws ok</div>\nNo: <div>lwsok</div>\nNo: <div><span>lws</span></div>\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"equals"),": True if the selected element or any of its children (case-sensitive) have the exact string alongside other strings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Ex:div:equals(lws)\nYes:<div><span>lws</span></div>\nNo: <div>lws ok</div>\n\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Contains (*)"),": True if the selected element or any its children (case-insensitive) have the exact string"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Ex: div:Contains(lws)\nYes:<div><span>LWs ok</span></div>\nNo: <div>lwsok</div>\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"contains"),": True if the selected element and all its children (case-sensitive) matches"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Ex: div:contains(lws)\nYes:<div><span>lws ok</span></div>\nYes:<div>lwsok</div>\nNo: <div>lwok</div>\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"RowCol (*)"),": Used to identify table cell (case-insensitive)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Ex: td:RowCol([value|name])\nYes:<tr><td></td><td>NAME</td></tr>\n    <tr><td>VALUE</td><td>1234</td></tr>\n    \nNo: <tr><td></td><td>name</td></tr>\n    <tr><td>value1</td><td>1234</td></tr>\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"rowcol"),": Used to identify a table cell (case-sensitive)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Ex: td:rowcol([value|name])\n  Yes:<tr><td></td><td>name</td></tr>\n    <tr><td>value</td><td>1234</td></tr>\n    \nNo: <tr><td></td><td>name</td></tr>\n    <tr><td>VALUE</td><td>1234</td></tr>\n\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"near (*)"),": Used to identify form input box based on labels (case-insensitive). The rule to match the first element before that shares a common parent element."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Ex: input:near(name)\nYes:<div><label>name: <input/></label></div>\nYes:<div><label>name: </label><input/></div>\nYes:<tr><td>Name</td><td><input/></td></tr>\nNo: <div>name</div><div><label>value</label><input/></div>\nNo: <div><div>name</div><div>value</div><input/></div>\n\n")),(0,a.kt)("p",null,"  Test"))}p.isMDXComponent=!0}}]);