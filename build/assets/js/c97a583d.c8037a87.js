"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8201],{2947:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=n(4848),a=n(8453),i=n(3628);const s={id:"why-boozang",title:"Why Boozang?"},r=void 0,l={id:"overview/why-boozang",title:"Why Boozang?",description:"Why do test automation",source:"@site/docs/overview/why-boozang.mdx",sourceDirName:"overview",slug:"/overview/why-boozang",permalink:"/docs/overview/why-boozang",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/overview/why-boozang.mdx",tags:[],version:"current",frontMatter:{id:"why-boozang",title:"Why Boozang?"},sidebar:"docs",next:{title:"Boozang from the trenches",permalink:"/docs/overview/boozang-from-the-trenches"}},d={},c=[{value:"Why do test automation",id:"why-do-test-automation",level:2},{value:"Why use Boozang",id:"why-use-boozang",level:2},{value:"Stable to code changes",id:"stable-to-code-changes",level:3},{value:"Automated documentation",id:"automated-documentation",level:3},{value:"AI test repair",id:"ai-test-repair",level:3},{value:"BDD / Cucumber support",id:"bdd--cucumber-support",level:3},{value:"Versioning, branching and merging",id:"versioning-branching-and-merging",level:3},{value:"Linkability",id:"linkability",level:3},{value:"API testing",id:"api-testing",level:3},{value:"Web components / Shadow DOM support and socket-based testing",id:"web-components--shadow-dom-support-and-socket-based-testing",level:3},{value:"At the core",id:"at-the-core",level:2},{value:"About the Technology",id:"about-the-technology",level:2},{value:"When to use Boozang",id:"when-to-use-boozang",level:2},{value:"Good fit vs bad fit",id:"good-fit-vs-bad-fit",level:3},{value:"A note on supported technology",id:"a-note-on-supported-technology",level:3}];function h(e){const t={a:"a",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"why-do-test-automation",children:"Why do test automation"}),"\n","\n","\n",(0,o.jsx)(t.p,{children:"There are several reasons why test automation is important:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Improved testing efficiency: Automated testing allows you to test more code in less time. This can be especially helpful when you have to test your application repeatedly, such as in the case of regression testing."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Faster time-to-market: By reducing the amount of time it takes to test your application, you can get your product to market faster."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Improved test coverage: Automated tests can cover a wider range of scenarios and edge cases, ensuring that your application is thoroughly tested."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Reduced human error: Manual testing is prone to human error. Automated tests, on the other hand, are reliable and repeatable."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Cost-effective: Automated testing can reduce the cost of testing over time. While there is an upfront investment in developing automated tests, the savings over the long run can be significant."}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:"Scalability: Automated testing can easily scale up to handle large and complex applications, which can be difficult or impossible with manual testing."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Overall, test automation helps improve the quality, reliability, and efficiency of your testing process, which in turn can lead to better software and a more satisfied user base."}),"\n",(0,o.jsx)(i.A,{embedId:"YcCw6cS7Uy0",children:"Docusaurus green"}),"\n",(0,o.jsx)(t.h2,{id:"why-use-boozang",children:"Why use Boozang"}),"\n",(0,o.jsx)(t.h3,{id:"stable-to-code-changes",children:"Stable to code changes"}),"\n",(0,o.jsx)(t.p,{children:"Boozang is fundamentally different from other test tools. Boozang uses natural language to identify browser elements, instead of the DOM elements, making tests incredibly stable to changes in the underlying implementation. It's possible to completely change the underlying technology without affecting the tests. You can go from a Java legacy application to Angular or React. The tests remain the same, as long as the business requirements do."}),"\n",(0,o.jsx)(t.h3,{id:"automated-documentation",children:"Automated documentation"}),"\n",(0,o.jsx)(t.p,{children:'As Boozang is completely based on natural language, all recorded tests are also a user manual. When a label changes, for example: "Create Project" being changed to: "Add Project", the test will need to be updated accordingly. This means the automated tests acts as living documentation.'}),"\n",(0,o.jsx)(t.h3,{id:"ai-test-repair",children:"AI test repair"}),"\n",(0,o.jsx)(t.p,{children:"As your code changes, Boozang tests remain stable. If you do change any labels or item identifiers, Boozang will automatically suggest how to repair your tests, or if no suggestion is available, allow you to reselect the element on the page. This reduces test maintenance immensely and allows you to repair broken tests on the fly."}),"\n",(0,o.jsx)(t.h3,{id:"bdd--cucumber-support",children:"BDD / Cucumber support"}),"\n",(0,o.jsx)(t.p,{children:"Built-in support for BDD. Write Gherkin tests directly in our interface, our import them from XRay / Jira. This allows you to write test specifications before the actual code and better distribute the team workload during the project lifecycle. It also allows you to engage business analysts in the testing process, who will have important product knowledge, but might lack in technical skills."}),"\n",(0,o.jsx)(t.h3,{id:"versioning-branching-and-merging",children:"Versioning, branching and merging"}),"\n",(0,o.jsx)(t.p,{children:"Boozang has built-in versioning, with support for branching and merging. This allows the team to collaborate in teams seamlessly. It also allows the team to align the automation work with the software development process."}),"\n",(0,o.jsx)(t.h3,{id:"linkability",children:"Linkability"}),"\n",(0,o.jsx)(t.p,{children:"Boozang is completely built-in Javascript, and being Cloud-based, there is no need for any client-side installation. Simply add an HTML fragment to your site to activate it for testing."}),"\n",(0,o.jsx)(t.h3,{id:"api-testing",children:"API testing"}),"\n",(0,o.jsx)(t.p,{children:"API testing is supported out of the box, allowing you to create tests that mixes API and UI operations. Automatically generate API tests by recording actions in the browser."}),"\n",(0,o.jsx)(t.h3,{id:"web-components--shadow-dom-support-and-socket-based-testing",children:"Web components / Shadow DOM support and socket-based testing"}),"\n",(0,o.jsx)(t.p,{children:"Supports Web Components / Shadow DOM testing and socket-based testing."}),"\n",(0,o.jsx)(t.h2,{id:"at-the-core",children:"At the core"}),"\n",(0,o.jsx)(t.p,{children:"Boozang is a code-less front end testing tool built for the modern web using only Javascript. It allows developers and Quality Assurance engineers to develop front-end tests quickly without the need for programming."}),"\n",(0,o.jsx)(t.p,{children:"Boozang is not based on Selenium and does not have the limitations of Selenium and Selenium webdriver. Boozang uses its own selection language based on natural language, allowing for native support of TDD / BDD (test/behavior-driven development) and allows for tests to be automatically generated from models (model-based testing)."}),"\n",(0,o.jsx)(t.h2,{id:"about-the-technology",children:"About the Technology"}),"\n",(0,o.jsx)(t.p,{children:"Boozang test technology is divided into two parts. The proprietary part of the tool, that allows you to author tests record fast and the Open Source test runner which is built on Google Puppeteer, which allows you to run tests from command-line and integrate Boozang into your CI flow or other tools."}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Boozang tool"}),": Sign up at ",(0,o.jsx)(t.a,{href:"https://boozang.com",children:"https://boozang.com"})," for free and paid license offerings."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Boozang test-runner"}),": For the Boozang Puppeteer open-source test runner, see ",(0,o.jsx)(t.a,{href:"https://github.com/ljunggren/bz-puppeteer",children:"https://github.com/ljunggren/bz-puppeteer"})," and the Docker container ",(0,o.jsx)(t.a,{href:"https://github.com/ljunggren/bz-docker-xvfb",children:"https://github.com/ljunggren/bz-docker-xvfb"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"when-to-use-boozang",children:"When to use Boozang"}),"\n",(0,o.jsx)(t.h3,{id:"good-fit-vs-bad-fit",children:"Good fit vs bad fit"}),"\n",(0,o.jsx)(t.p,{children:"Boozang is great when testing anything that runs in the web browser. This includes any modern SaaS application, no matter how complex. It\u2019s great when you need to automate testing of flows that can be determined by a machine, that doesn't exhibit random behaviour."}),"\n",(0,o.jsx)(t.p,{children:"A rule of thumb is that the more you feel the need to run regression testing, the more value you will find in the Boozang implementation. This means, if you release business-critical software often, you will find great value in Boozang. If you release rarely and bugs don't have a significant impact, maybe not so much."}),"\n",(0,o.jsx)(t.p,{children:"A less than ideal fit is also SaaS applications that have a graphical interface that needs a human to make a judgment call. These flows can never be fully automated, and the value of automation can be limited."}),"\n",(0,o.jsx)(t.h3,{id:"a-note-on-supported-technology",children:"A note on supported technology"}),"\n",(0,o.jsx)(t.p,{children:"Boozang supports any application that runs in the web browser. Boozang also supports hybrid approaches, such as Cordova, Ionic, and Xamarin."}),"\n",(0,o.jsx)(t.p,{children:"Since March 2019, Boozang also fully supports Shadow DOM / Web Components."}),"\n",(0,o.jsx)(t.p,{children:"Boozang does not support any testing of native IOS applications, Android applications, or any desktop-based applications."})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},3628:(e,t,n)=>{n.d(t,{A:()=>a});n(6540);var o=n(4848);const a=e=>{let{embedId:t}=e;return(0,o.jsx)("div",{className:"video-responsive",children:(0,o.jsx)("iframe",{width:"853",height:"480",src:`https://www.youtube.com/embed/${t}`,frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0,title:"Embedded youtube"})})}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var o=n(6540);const a={},i=o.createContext(a);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);