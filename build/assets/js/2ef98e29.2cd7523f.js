"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[694],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=l(n),b=o,d=c["".concat(u,".").concat(b)]||c[b]||m[b]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=b;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[c]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},6992:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const i={id:"github-actions",title:"GitHub actions"},a=void 0,s={unversionedId:"continuous-integration/github-actions",id:"continuous-integration/github-actions",title:"GitHub actions",description:"Boozang supports integration to GitHub actions. This particular implementation uses the  GabrielBB/xvfb-action@v1 package to enable headless browseer runs. It utilizes Multiple Cucumber HTML Reporter (https://www.npmjs.com/package/multiple-cucumber-html-reporter) to generate HTML Cucumber report dashboards, and publishes the test results as GitHub pages.",source:"@site/docs/continuous-integration/github-actions.mdx",sourceDirName:"continuous-integration",slug:"/continuous-integration/github-actions",permalink:"/docs/continuous-integration/github-actions",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/continuous-integration/github-actions.mdx",tags:[],version:"current",frontMatter:{id:"github-actions",title:"GitHub actions"},sidebar:"docs",previous:{title:"Jenkins",permalink:"/docs/continuous-integration/jenkins"},next:{title:"GitLab",permalink:"/docs/continuous-integration/gitlab"}},u={},l=[{value:"Implementation steps",id:"implementation-steps",level:6},{value:"Sample code",id:"sample-code",level:6}],p={toc:l};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Boozang supports integration to GitHub actions. This particular implementation uses the  GabrielBB/xvfb-action@v1 package to enable headless browseer runs. It utilizes Multiple Cucumber HTML Reporter (",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/multiple-cucumber-html-reporter"},"https://www.npmjs.com/package/multiple-cucumber-html-reporter"),") to generate HTML Cucumber report dashboards, and publishes the test results as GitHub pages. "),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Note: This implementation can probably be improved, and we invite you to share any updates with us, either via email or on our ",(0,o.kt)("a",{parentName:"em",href:"https://boozang.com/forum"},"forum"),". ")),(0,o.kt)("h6",{id:"implementation-steps"},"Implementation steps"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add a directory .github in your project root"),(0,o.kt)("li",{parentName:"ol"},"Create the directory .github/workflows"),(0,o.kt)("li",{parentName:"ol"},"Add the below code into the file .github/workflows/my-test-flow.yml"),(0,o.kt)("li",{parentName:"ol"},"Enable GitHub pages for your repo"),(0,o.kt)("li",{parentName:"ol"},"Push the code"),(0,o.kt)("li",{parentName:"ol"},"The test results will be published on the GitHub pages of your repo")),(0,o.kt)("h6",{id:"sample-code"},"Sample code"),(0,o.kt)("p",null,"Below is a sample of code generated. Note that most of these settings will vary depending on your particular project settings and selected test to run.  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name: my-test-flow\non: [push]\njobs:\n  run-boozang-tests:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v1\n      - run: npm install -g boozang\n      \n      - name: Run headless test with Boozang\n        uses: GabrielBB/xvfb-action@v1\n        with:\n          working-directory: ./ #optional\n          run: boozang --file=\"json/report\" \"http://staging-be.boozang.com/extension?parameter=&token=my-secret-token5e3f275e64f84941a326d4d8&group=&scope=&env=4&key=1&self=0#5e3f275e64f84941a326d4d8/jira61/m72/t10\"    \n      \n      - run: npm install multiple-cucumber-html-reporter --save-dev && node reporter.js\n        if: always()\n  \n      - name: Deploy report page\n        if: always()\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./public\n          user_name: 'github-actions[bot]'\n          user_email: 'github-actions[bot]@users.noreply.github.com'\n\n")))}c.isMDXComponent=!0}}]);