"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3825],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,f=u["".concat(p,".").concat(m)]||u[m]||c[m]||i;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},918:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const i={id:"predefined",title:"Predefined regexp"},o=void 0,l={unversionedId:"core-concepts/using-data/predefined",id:"core-concepts/using-data/predefined",title:"Predefined regexp",description:"There are also pre-programmed regular expressions in Boozang that can be used. Here is a list of the current ones.",source:"@site/docs/core-concepts/using-data/predefined.mdx",sourceDirName:"core-concepts/using-data",slug:"/core-concepts/using-data/predefined",permalink:"/docs/core-concepts/using-data/predefined",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/core-concepts/using-data/predefined.mdx",tags:[],version:"current",frontMatter:{id:"predefined",title:"Predefined regexp"},sidebar:"docs",previous:{title:"Regular Expressions",permalink:"/docs/core-concepts/using-data/regexp"},next:{title:"Troubleshooting",permalink:"/docs/core-concepts/using-data/troubleshooting"}},p={},d=[{value:"Data formatters for date and time",id:"data-formatters-for-date-and-time",level:3},{value:"Date and time",id:"date-and-time",level:3}],s={toc:d};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"There are also pre-programmed regular expressions in Boozang that can be used. Here is a list of the current ones."),(0,a.kt)("h3",{id:"data-formatters-for-date-and-time"},"Data formatters for date and time"),(0,a.kt)("p",null,"For data and time date, the default data format is ",(0,a.kt)("inlineCode",{parentName:"p"},"YYYY-MM-DD"),", meaning that for 26th of November 2019, ",(0,a.kt)("inlineCode",{parentName:"p"},"/{today}/"),"will output ",(0,a.kt)("inlineCode",{parentName:"p"},"2019-10-26"),". You can also input a data format string, separated by a pipe ",(0,a.kt)("inlineCode",{parentName:"p"},"|"),"character. Here are some examples,"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"No format string: ",(0,a.kt)("inlineCode",{parentName:"li"},"/{today}/"),"outputs ",(0,a.kt)("inlineCode",{parentName:"li"},"2019-10-26"),"."),(0,a.kt)("li",{parentName:"ul"},"With minutes and seconds dot-colon-notation: ",(0,a.kt)("inlineCode",{parentName:"li"},"/{today|YYYY.MM.DD:mm.ss}/")," will output ",(0,a.kt)("inlineCode",{parentName:"li"},"2019.10.26:30.29")),(0,a.kt)("li",{parentName:"ul"},"Only month and day:  ",(0,a.kt)("inlineCode",{parentName:"li"},"/{tomorrow|MM-DD}/"),"outputs ",(0,a.kt)("inlineCode",{parentName:"li"},"10-27"))),(0,a.kt)("h3",{id:"date-and-time"},"Date and time"),(0,a.kt)("p",null,"The following pre-defined expressions are available. All examples are based on today being Saturday, October 26th, 2019. "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/{today}/"),"outputs ",(0,a.kt)("inlineCode",{parentName:"li"},"2019-10-26")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/{yesterday}/")," and  ",(0,a.kt)("inlineCode",{parentName:"li"},"/{tomorrow}/"),"and outputs ",(0,a.kt)("inlineCode",{parentName:"li"},"2019-10-25")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"2019-10-27")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/{today-7}/"),"outputs ",(0,a.kt)("inlineCode",{parentName:"li"},"2019-10-19"),"(last week)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/{last-mon}/")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"/{last-tue}/")," outputs ",(0,a.kt)("inlineCode",{parentName:"li"},"2019-10-14")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"2019-10-15")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/{last-month}/")," outputs ",(0,a.kt)("inlineCode",{parentName:"li"},"2019-09-26"),"(this date previous month)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/{last-year}/")," outputs ",(0,a.kt)("inlineCode",{parentName:"li"},"2018-10-26"),"(this date previous year)")))}u.isMDXComponent=!0}}]);