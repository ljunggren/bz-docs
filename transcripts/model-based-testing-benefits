so on modelbased testing maybe you'renot convinced maybe you're thinking ahseems like a lot of work uh to set upthe models here uh even if we try tomake it as user friendly as possible itis more work up front so I'm going tomake five Arguments for why go withmodelbased testing and if this doesn'treally resonate with you then maybe uhyou can use more of a process orientedapproach modelbased testing is not foreverything the five argumentsare first of all let's talk reuse andlet me demo that for you so let's saynow we already created this create modelhere now let's say we want to add updateon top of that so how you update aproject is that you select it here inthe list and then you clickedit because we have now uh the datacached we can actually know here thatthis is the project current project nameso we can give you this kind ofautocomplete things that makes it mucheasier we need to make sure we hit thatpen to do update project and select thatpen now for the beautiful part if you gointo update here the only thing you cansee is that the form is kind of the samethe only difference is that instead ofproject name and instead of name it saysproject name here so we're going to needto update that selector and the way wedo that is using a regular expressionselector so we'll use prodject nameorname now we can reuse the name field touse it both for create andedit and then speaking of reuse now Ican just simply select start date enddate and project category because weknow that those fields are identical sohere you see the ReUse between createandupdate furthermore now that we add theupdate I'll add the modify step updateproject and now I can choose whichfields to update we can also add thesame validation step we use for createit will just simply update thedata and here you can see the data beingsent or different regular Expressions uhthat we driving this with where we use arandom projectcategory and just like that we haveautomatically generated an updateproject uh test case with a given stepthat creates a project an update stepthat updates the following data as wesaid with the checkboxes name start dateend date and project category and thenthat has avalidation the second argument I willmake is for maintainability and and thisgoes without saying let's say there isan update to the project form uh simplyupdate the form here the selector or foror add if there's another required fieldand then all the tests will beupdated the third case is a little moresubtle it's about debugging how do youdebug this well in buang this is notjust for model based testing when yourun one of these tests we have here adata debugger where you can see the datauh what the value is at all times andyou can basically just go into theapplication as any point and you canswitch to the data debugger and see theparameter name at that particular pointand that allows you to kind of have atime machine to go back and see what uhvalues were used and the data state ofyour application and your test thefourth case I want to make is scale solet me run and open the full commercialproject so if you look at the overviewof the AI models you'll have a number ofmodules that are all mapped out justlike I did and inside of these modulesyou can have sub modules which willautomatically uh set up the dependenciesyou are getting a lot for free so let'slet me show you something where I'vebeen kind of just writing a testmanually from scratch here you can nowstart nestling stuff given I am loggedin as admin there is a resource there isa project there is a task I update thetask in a certain way uh there is abudget I do some scheduling I wait andit should be out to plan so as you canimagine this is of course hundreds ofactions very very complex things but youcan seehow structured and how easy this is andif you look at I update a task you cansee how we're driving data and settingthe due date of the task to be today ifyou're looking at that scale of aproject on the reporting side here Ihave my modelbased test my non-modelbased test also my form field tests ahuge amount of this is my Jenkins run Ican see all the fail tests andautomatically now for each stage Icapture the screenshots and of coursethe problematic screenshot where theerror is and it's very easy for me totroubleshoot here in Jenkins theresults and then the last point I wantto make is kind of the bonus featuresyou get when you do modelbased testingso far we found at least two bonus uhopportunities to build into the tool wecan add a rule based form fill enginewhere you can simply add add validationrules to validate that if all therequired fields are set etc etc is theadd button enabled uh or is it disabledand basically you can build these reallyreally quick validations the secondbonus feature is something that isreally cool which is check accesspermissions right now I can now create avery very straightforward test withaccess rights basically I am logged inthere is one project I set my accessrights and then I can just validateaccess rights depending on the operationor the Alias I set on that control so itwill automatically scan all the formsand make sure the user has the right tofor instance create a project and thecreate button should be enabled so theseare five advantages we see so far amodelbased testing we would love to hearyour uh opinions on that and uh I wouldwould really love if you would try outBoozang which is currently free for doingbeta testing as this is a pre-releasefeature so please try it out and let usknow what you think and also all ideasare welcome on how to improve this