Transcript for [Boozang Introduction: Implementing Cucumber test steps](https://www.youtube.com/watch?v=504rY6KPBA8) by [Merlin](https://merlin.foyer.work/)

 Now I'm going to show you how easy it is to implement cucumber test steps in BooSAN and we're going to start with a non-data-driven test which is perfect candidate here is add item to list it's basically given I have an empty list when I add an item the item should be shown in the list very straightforward so we used to kind of force you to create all the test steps implementation up front but now you can actually just
 But now you can actually just click on this and just click new test and you can even create the module here directly from the menu. In this case I'm going to use the list module and I'm going to say I have an empty list. Remember the test step should be more declarative so it should be like clear list right. That's the same thing. If you have an empty list you want to run the test clear list and you want to use a test module. So I'm going to say I have an empty list and I'm going to say I have a test module. I'm going to say I have a test module and I'm going to say I have a test module. I'm going to say I have a test module. I'm going to say I have a test module. I'm going to say I have a test module. I'm going to say I have a test module. I'm going to say I have a test module. I'm going to say I have a test module. I'm going to say I have a test module. I'm going to say I have a test module. I'm going to say I have a test module. I'm going to say I have a test module. I'm going to say I have a test module.
 and you want to use a good URL so let's look at sorted list it's the entry point is sorted list and as you can see the full URL here this default is reload page on URL mismatch that will it will work but we're going to use always reload page in this case and in this case we are not going to do anything we have a cleared list under normal circumstances of course we would add a clear use case
 we would add a clear use case here. Then I'm going to go into I add an item so I'm going to go ahead and do new test and I'm going to go ahead and pick the list module and here I'm just going to do add item. Here I should also set the URL correctly but it's not so important because here we will never reload the page. Remember it's relying on the state of the application from the step before so do never reload page.
 of the application from the step before so do never reload page and then I simply click into this test and I'll record a simple addition of an item which we will call test item here and I'll click add to do so now we have two simple actions one that sets the value and clicks the button okay and remember in general Busan defaults to data-driven tests so you can set this to whatever you want and then we'll go back
 driven tests. So you can set this to whatever you want. And then we'll go back and we'll make sure that we have a validation as well. So we will say in the list module validate item in list and use the same sorted list and again never reload. So again we need to do a validation and what you will do here is use a simple validation action validate exists is a good thing.
 validation action validate exists is a good thing and then when you select you can use this little selector if you don't see the selector and you make sure to just either hover over the whole item or the little item depending on what works for you. So what we're going to do now is of course we're gonna go ahead and delete this and go back up and run our non data-driven cucumber test. So what you see is that the page is reloaded
 cucumber test. So what you see is that the page is reloaded, you see an item is added and you also see that you have a validation. Of course this is a very very simple test right but what you can see is that the fundamentals you have a precondition where you make sure that the application is in a certain state. You'll have an action and you have a post condition and you see how you very very quickly could implement a simple cucumber test using BooSang.